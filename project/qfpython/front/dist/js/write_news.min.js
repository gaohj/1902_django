function News(){this.progressGroup=$("#progress-group"),this.progressBar=$(".progress-bar")}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.ListenUploadFileEvent=function(){var n=$("#thumbnail-btn");n.change(function(){var e=n[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.ListenQiniuUploadFileEvent=function(){var a=this;$("#thumbnail-btn").change(function(e){var r=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){var t=e.uptoken,n=(new Date).getTime()+"."+r.name.split(".")[1],o={fname:n,params:{},mimeType:["image/png","video/x-ms-wmv","image/jpeg"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z0};qiniu.upload(r,n,t,o,i).subscribe({next:a.updateUploadProgress,error:a.uploadErrorEvent,complete:a.complateUploadEvent}),a.progressGroup.show()}})})},News.prototype.updateUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%",n=$(".progress-bar");n.css({width:t}),n.text(t)},News.prototype.uploadErrorEvent=function(e){window.messageBox.showError(e.message)},News.prototype.complateUploadEvent=function(e){var t="http://q1cpa1kbu.bkt.clouddn.com/"+e.key;$("#thumbnail-form").val(t),$("#progress-group").hide()},News.prototype.ListenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$("input[name='title']").val(),n=$("select[name='category']").val(),o=$("input[name='desc']").val(),i=$("input[name='thumbnail']").val(),r=window.ue.getContent();alert(n),xfzajax.post({url:"/cms/write_news/",data:{title:t,category:n,desc:o,thumbnail:i,content:r},success:function(e){200===e.code&&alert("发表成功")}})})},News.prototype.run=function(){var e=this;e.ListenQiniuUploadFileEvent(),e.initUEditor(),e.ListenSubmitEvent()},$(function(){(new News).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
