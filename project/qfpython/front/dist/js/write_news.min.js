function News(){this.progressGroup=$("#progress-group"),this.progressBar=$(".progress-bar")}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.ListenUploadFileEvent=function(){var o=$("#thumbnail-btn");o.change(function(){var e=o[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.ListenQiniuUploadFileEvent=function(){var s=this;$("#thumbnail-btn").change(function(e){var i=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){var t=e.uptoken,o=(new Date).getTime()+"."+i.name.split(".")[1],r={fname:o,params:{},mimeType:["image/png","video/x-ms-wmv","image/jpeg"]},n={useCdnDomain:!0,retryCount:6,region:qiniu.region.z0};qiniu.upload(i,o,t,r,n).subscribe({next:s.updateUploadProgress,error:s.uploadErrorEvent,complete:s.complateUploadEvent}),s.progressGroup.show()}})})},News.prototype.updateUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%",o=$(".progress-bar");o.css({width:t}),o.text(t)},News.prototype.uploadErrorEvent=function(e){window.messageBox.showError(e.message)},News.prototype.complateUploadEvent=function(e){var t="http://q1cpa1kbu.bkt.clouddn.com/"+e.key;$("#thumbnail-form").val(t),$("#progress-group").hide()},News.prototype.run=function(){this.ListenQiniuUploadFileEvent(),this.initUEditor()},$(function(){(new News).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyaXRlX25ld3MuanMiXSwibmFtZXMiOlsiTmV3cyIsInRoaXMiLCJwcm9ncmVzc0dyb3VwIiwiJCIsInByb2dyZXNzQmFyIiwicHJvdG90eXBlIiwiaW5pdFVFZGl0b3IiLCJ3aW5kb3ciLCJ1ZSIsIlVFIiwiZ2V0RWRpdG9yIiwiaW5pdGlhbEZyYW1lSGVpZ2h0Iiwic2VydmVyVXJsIiwiTGlzdGVuVXBsb2FkRmlsZUV2ZW50IiwidXBsb2FkQnRuIiwiY2hhbmdlIiwiZmlsZSIsImZpbGVzIiwiZm9ybWRhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsInhmemFqYXgiLCJwb3N0IiwidXJsIiwiZGF0YSIsInByb2Nlc3NEYXRhIiwiY29udGVudFR5cGUiLCJzdWNjZXNzIiwicmVzdWx0IiwidmFsIiwiTGlzdGVuUWluaXVVcGxvYWRGaWxlRXZlbnQiLCJzZWxmIiwiZXZlbnQiLCJnZXQiLCJ0b2tlbiIsImtleSIsIkRhdGUiLCJnZXRUaW1lIiwibmFtZSIsInNwbGl0IiwicHV0RXh0cmEiLCJmbmFtZSIsInBhcmFtcyIsIm1pbWVUeXBlIiwiY29uZmlnIiwidXNlQ2RuRG9tYWluIiwicmV0cnlDb3VudCIsInJlZ2lvbiIsInFpbml1IiwiejAiLCJ1cGxvYWQiLCJzdWJzY3JpYmUiLCJuZXh0IiwidXBkYXRlVXBsb2FkUHJvZ3Jlc3MiLCJlcnJvciIsInVwbG9hZEVycm9yRXZlbnQiLCJjb21wbGV0ZSIsImNvbXBsYXRlVXBsb2FkRXZlbnQiLCJzaG93IiwicmVzcG9uc2UiLCJwZXJjZW50VGV4dCIsInRvdGFsIiwicGVyY2VudCIsInRvRml4ZWQiLCJjc3MiLCJ3aWR0aCIsInRleHQiLCJtZXNzYWdlQm94Iiwic2hvd0Vycm9yIiwibWVzc2FnZSIsInRodW1ibmFpbFVybCIsImhpZGUiLCJydW4iXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLE9BQ01DLEtBQ0xDLGNBQWdCQyxFQUFFLG1CQURiRixLQUVMRyxZQUFjRCxFQUFFLGlCQUcxQkgsS0FBS0ssVUFBVUMsWUFBYyxXQUN6QkMsT0FBT0MsR0FBS0MsR0FBR0MsVUFBVSxTQUFTLENBQzlCQyxtQkFBc0IsSUFDdEJDLFVBQWEsc0JBR3JCWixLQUFLSyxVQUFVUSxzQkFBd0IsV0FDbkMsSUFBSUMsRUFBWVgsRUFBRSxrQkFDbEJXLEVBQVVDLE9BQU8sV0FDYixJQUFJQyxFQUFPRixFQUFVLEdBQUdHLE1BQU0sR0FDMUJDLEVBQVMsSUFBSUMsU0FDakJELEVBQVNFLE9BQU8sT0FBT0osR0FDdkJLLFFBQVFDLEtBQUssQ0FDVEMsSUFBTSxvQkFDTkMsS0FBT04sRUFDUE8sYUFBYyxFQUNkQyxhQUFjLEVBQ2RDLFFBQVUsU0FBVUMsR0FDaEIsR0FBb0IsTUFBakJBLEVBQWEsS0FBUSxDQUNwQixJQUFJTCxFQUFNSyxFQUFhLEtBQU8sSUFDVHpCLEVBQUUsbUJBQ1IwQixJQUFJTixVQVF2Q3ZCLEtBQUtLLFVBQVV5QiwyQkFBNkIsV0FDdkMsSUFBSUMsRUFBTzlCLEtBQ1FFLEVBQUUsa0JBQ1JZLE9BQU8sU0FBVWlCLEdBQzFCLElBQUloQixFQUFPZixLQUFLZ0IsTUFBTSxHQUN0QkksUUFBUVksSUFBSSxDQUNSVixJQUFPLGdCQUNQSSxRQUFXLFNBQVVDLEdBQ2pCLElBQUlNLEVBQVFOLEVBQWdCLFFBQ3hCTyxHQUFNLElBQUtDLE1BQVFDLFVBQVksSUFBTXJCLEVBQUtzQixLQUFLQyxNQUFNLEtBQUssR0FDMURDLEVBQVcsQ0FDWEMsTUFBT04sRUFDUE8sT0FBUSxHQUNSQyxTQUFVLENBQUMsWUFBWSxpQkFBaUIsZUFFeENDLEVBQVMsQ0FDVEMsY0FBYyxFQUNkQyxXQUFZLEVBQ1pDLE9BQVFDLE1BQU1ELE9BQU9FLElBRVJELE1BQU1FLE9BQU9sQyxFQUFNbUIsRUFBS0QsRUFBT00sRUFBU0ksR0FDOUNPLFVBQVUsQ0FDakJDLEtBQU9yQixFQUFLc0IscUJBQ1pDLE1BQVF2QixFQUFLd0IsaUJBQ2JDLFNBQVl6QixFQUFLMEIsc0JBRXJCMUIsRUFBSzdCLGNBQWN3RCxhQUtuQzFELEtBQUtLLFVBQVVnRCxxQkFBdUIsU0FBVU0sR0FDNUMsSUFHSUMsRUFGUUQsRUFBU0UsTUFDREMsUUFDTUMsUUFBUSxHQUFLLElBQ25DM0QsRUFBY0QsRUFBRSxpQkFDcEJDLEVBQVk0RCxJQUFJLENBQUNDLE1BQVFMLElBQ3pCeEQsRUFBWThELEtBQUtOLElBR3JCNUQsS0FBS0ssVUFBVWtELGlCQUFtQixTQUFVRCxHQUN4Qy9DLE9BQU80RCxXQUFXQyxVQUFVZCxFQUFNZSxVQUd0Q3JFLEtBQUtLLFVBQVVvRCxvQkFBc0IsU0FBVUUsR0FDM0MsSUFHSVcsRUFEUyxvQ0FERVgsRUFBYyxJQUdSeEQsRUFBRSxtQkFDUjBCLElBQUl5QyxHQUNDbkUsRUFBRSxtQkFDUm9FLFFBRW5CdkUsS0FBS0ssVUFBVW1FLElBQU0sV0FDTnZFLEtBRU42Qiw2QkFGTTdCLEtBR05LLGVBR1RILEVBQUUsWUFDYSxJQUFJSCxNQUNWd0UiLCJmaWxlIjoid3JpdGVfbmV3cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBOZXdzKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgIHNlbGYucHJvZ3Jlc3NHcm91cCA9ICQoXCIjcHJvZ3Jlc3MtZ3JvdXBcIik7XHJcbiAgICAgc2VsZi5wcm9ncmVzc0JhciA9ICQoXCIucHJvZ3Jlc3MtYmFyXCIpO1xyXG59XHJcbi8vdWVkaXRvciDnvJbovpHlmahcclxuTmV3cy5wcm90b3R5cGUuaW5pdFVFZGl0b3IgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB3aW5kb3cudWUgPSBVRS5nZXRFZGl0b3IoJ2VkaXRvcicse1xyXG4gICAgICAgICdpbml0aWFsRnJhbWVIZWlnaHQnOiA0MDAsIC8v5Yid5aeL5YyW57yW6L6R5Zmo55qE6auY5bqmXHJcbiAgICAgICAgJ3NlcnZlclVybCc6ICcvdWVkaXRvci91cGxvYWQvJyAvL+i/memHjOaYryDmnI3liqHlmajlk43lupTnmoTmjqXlj6MgIOS5n+WwseaYr+S4iumdoueahCB2aWV3cy5weVxyXG4gICAgfSk7XHJcbn07XHJcbk5ld3MucHJvdG90eXBlLkxpc3RlblVwbG9hZEZpbGVFdmVudCA9IGZ1bmN0aW9uKCl7XHJcbiAgICB2YXIgdXBsb2FkQnRuID0gJCgnI3RodW1ibmFpbC1idG4nKTtcclxuICAgIHVwbG9hZEJ0bi5jaGFuZ2UoZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgZmlsZSA9IHVwbG9hZEJ0blswXS5maWxlc1swXTtcclxuICAgICAgICB2YXIgZm9ybWRhdGE9bmV3IEZvcm1EYXRhKCk7XHJcbiAgICAgICAgZm9ybWRhdGEuYXBwZW5kKFwiZmlsZVwiLGZpbGUpO1xyXG4gICAgICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICd1cmwnOicvY21zL3VwbG9hZF9maWxlLycsXHJcbiAgICAgICAgICAgICdkYXRhJzpmb3JtZGF0YSxcclxuICAgICAgICAgICAgJ3Byb2Nlc3NEYXRhJzpmYWxzZSxcclxuICAgICAgICAgICAgJ2NvbnRlbnRUeXBlJzpmYWxzZSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOmZ1bmN0aW9uIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddPT09MjAwKXtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgdXJsID0gcmVzdWx0WydkYXRhJ11bJ3VybCddXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRodW1ibmFpbElucHV0ID0gJCgnI3RodW1ibmFpbC1mb3JtJylcclxuICAgICAgICAgICAgICAgICAgICB0aHVtYm5haWxJbnB1dC52YWwodXJsKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9KVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbk5ld3MucHJvdG90eXBlLkxpc3RlblFpbml1VXBsb2FkRmlsZUV2ZW50ID0gZnVuY3Rpb24oKXtcclxuICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgdmFyIHRodW1ibmFpbEJ0biA9ICQoJyN0aHVtYm5haWwtYnRuJyk7XHJcbiAgICAgdGh1bWJuYWlsQnRuLmNoYW5nZShmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICAgdmFyIGZpbGUgPSB0aGlzLmZpbGVzWzBdO1xyXG4gICAgICAgICB4ZnphamF4LmdldCh7XHJcbiAgICAgICAgICAgICAndXJsJzogJy9jbXMvcW50b2tlbi8nLFxyXG4gICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgdmFyIHRva2VuID0gcmVzdWx0Wyd1cHRva2VuJ107XHJcbiAgICAgICAgICAgICAgICAgdmFyIGtleSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCkgKyAnLicgKyBmaWxlLm5hbWUuc3BsaXQoJy4nKVsxXTtcclxuICAgICAgICAgICAgICAgICB2YXIgcHV0RXh0cmEgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgIGZuYW1lOiBrZXksXHJcbiAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge30sXHJcbiAgICAgICAgICAgICAgICAgICAgIG1pbWVUeXBlOiBbJ2ltYWdlL3BuZycsJ3ZpZGVvL3gtbXMtd212JywnaW1hZ2UvanBlZyddXHJcbiAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICB2YXIgY29uZmlnID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICB1c2VDZG5Eb21haW46IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgIHJldHJ5Q291bnQ6IDYsXHJcbiAgICAgICAgICAgICAgICAgICAgIHJlZ2lvbjogcWluaXUucmVnaW9uLnowXHJcbiAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICB2YXIgb2JzZXJ2YWJsZSA9IHFpbml1LnVwbG9hZChmaWxlLCBrZXksIHRva2VuLCBwdXRFeHRyYSxjb25maWcpO1xyXG4gICAgICAgICAgICAgICAgIG9ic2VydmFibGUuc3Vic2NyaWJlKHtcclxuICAgICAgICAgICAgICAgICAgICAgXCJuZXh0XCI6c2VsZi51cGRhdGVVcGxvYWRQcm9ncmVzcyxcclxuICAgICAgICAgICAgICAgICAgICAgXCJlcnJvclwiOnNlbGYudXBsb2FkRXJyb3JFdmVudCxcclxuICAgICAgICAgICAgICAgICAgICAgXCJjb21wbGV0ZVwiOiBzZWxmLmNvbXBsYXRlVXBsb2FkRXZlbnRcclxuICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICBzZWxmLnByb2dyZXNzR3JvdXAuc2hvdygpO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICB9KTtcclxuICAgICB9KTtcclxufVxyXG4gTmV3cy5wcm90b3R5cGUudXBkYXRlVXBsb2FkUHJvZ3Jlc3MgPSBmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgdmFyIHRvdGFsID0gcmVzcG9uc2UudG90YWw7XHJcbiAgICAgdmFyIHBlcmNlbnQgPSB0b3RhbC5wZXJjZW50O1xyXG4gICAgIHZhciBwZXJjZW50VGV4dCA9IHBlcmNlbnQudG9GaXhlZCgwKSArICclJztcclxuICAgICB2YXIgcHJvZ3Jlc3NCYXIgPSAkKFwiLnByb2dyZXNzLWJhclwiKTtcclxuICAgICBwcm9ncmVzc0Jhci5jc3Moe1wid2lkdGhcIjpwZXJjZW50VGV4dH0pO1xyXG4gICAgIHByb2dyZXNzQmFyLnRleHQocGVyY2VudFRleHQpO1xyXG4gfTtcclxuXHJcbiBOZXdzLnByb3RvdHlwZS51cGxvYWRFcnJvckV2ZW50ID0gZnVuY3Rpb24gKGVycm9yKSB7XHJcbiAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvd0Vycm9yKGVycm9yLm1lc3NhZ2UpO1xyXG4gfTtcclxuXHJcbiBOZXdzLnByb3RvdHlwZS5jb21wbGF0ZVVwbG9hZEV2ZW50ID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgIHZhciBmaWxlbmFtZSA9IHJlc3BvbnNlWydrZXknXTtcclxuICAgICB2YXIgZG9tYWluID0gJ2h0dHA6Ly9xMWNwYTFrYnUuYmt0LmNsb3VkZG4uY29tLyc7XHJcbiAgICAgdmFyIHRodW1ibmFpbFVybCA9IGRvbWFpbiArIGZpbGVuYW1lO1xyXG4gICAgIHZhciB0aHVtYm5haWxJbnB1dCA9ICQoXCIjdGh1bWJuYWlsLWZvcm1cIik7XHJcbiAgICAgdGh1bWJuYWlsSW5wdXQudmFsKHRodW1ibmFpbFVybCk7XHJcbiAgICAgdmFyIHByb2dyZXNzR3JvdXAgPSAkKFwiI3Byb2dyZXNzLWdyb3VwXCIpO1xyXG4gICAgIHByb2dyZXNzR3JvdXAuaGlkZSgpO1xyXG4gfTtcclxuTmV3cy5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgLy8gc2VsZi5MaXN0ZW5VcGxvYWRGaWxlRXZlbnQoKTtcclxuICAgIHNlbGYuTGlzdGVuUWluaXVVcGxvYWRGaWxlRXZlbnQoKTtcclxuICAgIHNlbGYuaW5pdFVFZGl0b3IoKTtcclxufVxyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgbmV3cyA9IG5ldyBOZXdzKCk7XHJcbiAgICBuZXdzLnJ1bigpO1xyXG59KSJdfQ==
